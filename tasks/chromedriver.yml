---

- name: Organize desired ChromeDriver versions into "specific enough" and "not specific"
  set_fact:
    nonspecific_chrome_versions: >
      {{ chromedriver.desired_versions
        | selectattr('version', 'search', '^(latest|\d+(\.\d+){0,2})$')
        | list
      }}
    specific_chrome_versions: >
      {{ chromedriver.desired_versions 
        | selectattr('version', 'search', '^\d+(\.\d+){3}$')
        | list
      }}

- debug:
    var: "{{ item }}"
  with_items:
    - nonspecific_chrome_versions
    - specific_chrome_versions

- name: Gather specific ChromeDriver versions from less-specific desired versions
  uri:
    url: "{{ chromedriver.baseurl }}/LATEST_RELEASE{{ '_' + item.version if item.version != 'latest' else '' }}"
    return_content: yes
  with_items: '{{ nonspecific_chrome_versions }}'
  register: specific_chrome_cmd 

- debug:
    var: specific_chrome_cmd.results
    verbosity: 3
  
# TODO preserve original version strings / aliases alongside!

- name: Combine results with known specific versions
  set_fact:
    all_chrome_versions: >
      {{ specific_chrome_cmd.results | map(attribute='content') | list 
        | union(
          specific_chrome_versions | map(attribute='version') | list
        ) 
      }}

- debug:
    var: all_chrome_versions
